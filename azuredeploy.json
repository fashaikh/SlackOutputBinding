{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "appName": {
          "type": "string",
          "metadata": {
              "description": "The name of the function app that you wish to create."
          }
      },
      "databaseAccountName": {
      "type": "string",
      "metadata": {
        "description": "The Azure Cosmos DB database account name."
      }
      },
      "AWSAccessKeyID": {
      "type": "string",
      "metadata": {
        "description": "AWSAccessKeyID with access to the AWS S3 storage account."
      }
      },
      "AWSSecretAccessKey": {
      "type": "string",
      "metadata": {
        "description": "Secret for the AWS S3 Access Key. Follow these instructions to get these secrets https://www.cloudberrylab.com/resources/blog/how-to-find-your-aws-access-key-id-and-secret-access-key/ "
      }
      },
      "BucketName": {
      "type": "string",
      "metadata": {
        "description": "Name of the S3 bucket you plan to use. eg functions-demo."
      }
      },
      "OcpApiKey": {
      "type": "string",
      "metadata": {
        "description": "from Microsoft Cognitive Services. Get yours here https://labs.cognitive.microsoft.com/en-US/sign-up?ReturnUrl=/en-us/subscriptions."
      }
    }
  },
  "variables": {
      "functionAppName": "[parameters('appName')]",
      "hostingPlanName": "[concat(parameters('appName'), '-plan')]",
      "applicationInsightsName": "[parameters('appName')]",
      "repoURL": "https://github.com/fashaikh/functions-aws-s3-cosmosdb-v1",
      "branch": "master",
      "storageAccountName": "[concat('storage', uniquestring(resourceGroup().id))]",
      "storageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
      "databaseAccountTier": "Standard"
  },
    "resources": [
    {
      "apiVersion": "2015-04-08",
      "type": "Microsoft.DocumentDb/databaseAccounts",
      "name": "[parameters('databaseAccountName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "name": "[parameters('databaseAccountName')]",
        "databaseAccountOfferType": "[variables('databaseAccountTier')]",
        "locations": [
          {
            "locationName": "[resourceGroup().location]",
            "failoverPriority": 0
          }
        ]
      }
    },
      {
        "type": "Microsoft.Storage/storageAccounts",
        "name": "[variables('storageAccountName')]",
        "apiVersion": "2018-07-01",
        "kind": "StorageV2",
        "location": "[resourceGroup().location]",
        "sku": {
            "name": "Standard_LRS",
            "tier": "Standard"
        },
        "properties": {
            "accessTier": "Hot"
        },
        "resources": [
            {
                "type": "blobServices/containers",
                "name": "default/thumbnails",
                "apiVersion": "2018-07-01",
                "dependsOn": [
                    "[variables('storageAccountName')]"
                ]
            },
            {
                "type": "blobServices/containers",
                "name": "default/images",
                "apiVersion": "2018-07-01",
                "dependsOn": [
                    "[variables('storageAccountName')]"
                ]
            }
        ]
    },
          {
          "type": "Microsoft.Web/serverfarms",
          "apiVersion": "2015-04-01",
          "name": "[variables('hostingPlanName')]",
          "location": "[resourceGroup().location]",
          
          "properties": {
              "name": "[variables('hostingPlanName')]",
              "computeMode": "Dynamic",
              "sku": "Dynamic"
          }
      },
      {
        "apiVersion": "2016-03-01",
        "type": "Microsoft.Web/sites",
        "name": "[variables('functionAppName')]",
        "location": "[resourceGroup().location]",
        "identity": {
          "type": "SystemAssigned"
        },
        "kind": "functionapp",
        "properties": {
            "name": "[variables('functionAppName')]",
            "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
            "hostingEnvironment": "",
            "clientAffinityEnabled": false,
            "siteConfig": {
                "appSettings": [
                    {
                        "name": "AzureWebJobsDashboard",
                        "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
                    },
                    {
                        "name": "AzureWebJobsStorage",
                        "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
                    },
                    {
                        "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                        "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
                    },
                    {
                        "name": "WEBSITE_CONTENTSHARE",
                        "value": "[toLower(variables('functionAppName'))]"
                    },
                    {
                        "name": "FUNCTIONS_EXTENSION_VERSION",
                        "value": "~1"
                    },
                    {
                      "name": "CosmosDB",
                      "value": "[concat('AccountName=', reference(concat('Microsoft.DocumentDb/databaseAccounts/', parameters('databaseAccountName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', parameters('databaseAccountName')), '2015-04-08').primaryMasterKey)]"
                    }
                ]
            }
        },
        "dependsOn": [
            "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
        ],
        "resources": [
            {
                "apiVersion": "2015-08-01",
                "name": "web",
                "type": "sourcecontrols",
                "dependsOn": [
                    "[resourceId('Microsoft.Web/Sites', variables('functionAppName'))]"
                ],
                "properties": {
                    "RepoUrl": "[variables('repoURL')]",
                    "branch": "[variables('branch')]",
                    "IsManualIntegration": true
                }
            }
        ]
    }
    ]
}
